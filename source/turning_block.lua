---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dreadnought.
--- DateTime: 04/06/2022 12:40
---

--- 320x200

import "CoreLibs/graphics"
import "CoreLibs/object"
import "geometry"
import "global"

class("TurningBlock").extends()


--- we define an array with 320 int between 0-100?

function TurningBlock:init()
    self.block_distance = {}
    self.tool_offset = Point(tool_offset_x, tool_offset_y)
    self.default_radius = 110
    for i = 0,321 do
        self.block_distance[i] =self.default_radius
       -- if i<100 then
        --    self.block_distance[i] =  100 --100
       -- else
      --      self.block_distance[i] = 20*math.sin(i/36*math.pi  ) + 80 --100
     --   end


    end

end


function TurningBlock:draw()
    playdate.graphics.setColor(playdate.graphics.kColorBlack)
    for i = 1,320 do
        --playdate.graphics.drawPixel(i,self.block_distance[i])

        local smallEnd = math.min(self.block_distance[i-1],self.block_distance[i],self.block_distance[i+1] )

        if self.block_distance[i] ~= 0 then
            for j  = smallEnd, self.block_distance[i] do

                playdate.graphics.drawPixel(self.tool_offset.x + i,self.tool_offset.y + 120 + j)
                playdate.graphics.drawPixel(self.tool_offset.x + i,self.tool_offset.y + 120 - j)
            end
        else
            for j = i,320 do
                self.block_distance[j] = 0

            end
            break
        end





    end
    playdate.graphics.drawLine(self.tool_offset.x+1, self.tool_offset.y + 120 + self.block_distance[1], self.tool_offset.x+1, self.tool_offset.y + 120 - self.block_distance[1])
    playdate.graphics.drawLine(self.tool_offset.x+320, self.tool_offset.y + 120 + self.block_distance[320], self.tool_offset.x+320, self.tool_offset.y + 120 - self.block_distance[320])


end
